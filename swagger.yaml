openapi: 3.0.0
info:
  title: Kadena Wallet Signing API
  description: An API for signing commands
  version: 1.0.0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/STERLINGLONG/KadenaWalletSigningApi/1.0.0
  - url: https://example.com/sign
paths:
  /sign:
    post:
      summary: Sign a command
      operationId: signCommand
      requestBody:
        description: The signing request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigningRequest'
      responses:
        '200':
          description: A signed command
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignedCommand'
  /quicksign:
    post:
      summary: Sign a list of commands
      operationId: quickSignCommands
      requestBody:
        description: The quick sign request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuicksignRequest'
      responses:
        '200':
          description: The result of the quick sign request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuicksignResponse'
components:
  schemas:
    ExecMessage:
      type: object
      properties:
        data:
          type: object
        code:
          type: string
      required:
        - data
        - code
    ContinuationMessage:
      type: object
      properties:
        pactId:
          type: string
        step:
          type: integer
        rollback:
          type: boolean
        data:
          type: object
        proof:
          type: string
      required:
        - pactId
        - step
        - rollback
        - data
        - proof
    CommandPayload:
      type: object
      properties:
        exec:
          $ref: '#/components/schemas/ExecMessage'
        cont:
          $ref: '#/components/schemas/ContinuationMessage'
    Capability:
      type: object
      properties:
        name:
          type: string
        args:
          type: array
          items: {}
      required:
        - name
    SignerCapability:
      type: object
      properties:
        pubKey:
          type: string
        clist:
          type: array
          items:
            $ref: '#/components/schemas/Capability'
      required:
        - pubKey
        - clist
    CommandMetadata:
      type: object
      properties:
        chainId:
          type: string
        gasLimit:
          type: integer
        gasPrice:
          type: integer
        sender:
          type: string
        ttl:
          type: integer
        creationTime:
          type: integer
      required:
        - chainId
        - gasLimit
        - gasPrice
        - sender
        - ttl
        - creationTime
    PactCommandPayload:
      type: object
      properties:
        payload:
          $ref: '#/components/schemas/CommandPayload'
        signers:
          type: array
          items:
            $ref: '#/components/schemas/SignerCapability'
        meta:
          $ref: '#/components/schemas/CommandMetadata'
        nonce:
          type: string
      required:
        - payload
        - signers
        - meta
        - nonce
      example:
        payload:
          exec:
            data: null
            code: '(coin.transfer "Alice" "Bob" 10.0)'
        signers:
          - pubKey: 368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca
            clist:
              - name: coin.TRANSFER
                args:
                  - Alice
                  - Bob
                  - 10
        meta:
          gasLimit: 1000
          chainId: "0"
          gasPrice: 0.01
          sender: 368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca
        nonce: nonce-value
    Signer:
      type: object
      properties:
        pubKey:
          type: string
          nullable: true
        sig:
          type: string
      required:
        - sig
      example:
        pubKey: '0x123456789abcdef'
        sig: '0xabcdef123456789'
    PactCommand:
      type: object
      properties:
        cmd:
          type: string
        hash:
          type: string
        sigs:
          type: array
          items:
            $ref: '#/components/schemas/Signer'
      required:
        - cmd
        - hash
        - sigs
      example:
        hash: H6XjdPHzMai2HLa3_yVkXfkFYMgA0bGfsB0kOsHAMuI
        sigs:
          - sig: 8d452109cc0439234c093b5e204a7428bc0a54f22704402492e027aaa9375a34c910d8a468a12746d0d29e9353f4a3fbebe920d63bcc7963853995db015d060f
        cmd: '{"payload":{"exec":{"data":null,"code":"(+ 1 2)"}},
          "signers":[{"pubKey":"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca"}],
          "meta":{"gasLimit":1000,"chainId":"0","gasPrice":1.0e-2,"sender":"368820f80c324bbc7c2b0610688a7da43e39f91d118732671cd9c7500ff43cca"},
          "nonce":"nonce-value"}'
    DappCap:
      type: object
      properties:
        role:
          type: string
        description:
          type: string
        cap:
          type: object
          properties:
            name:
              type: string
            args:
              type: array
              items:
                type: string
    SigningRequest:
      type: object
      properties:
        pactCode:
          type: string
        envData:
          type: object
        sender:
          type: string
        networkId:
          type: string
        chainId:
          type: string
        gasLimit:
          type: number
        gasPrice:
          type: number
        signingPubKey:
          type: string
        ttl:
          type: number
        caps:
          $ref: '#/components/schemas/DappCap'
    SignedCommand:
      type: object
      properties:
        hash:
          type: string
        sigs:
          type: array
          items:
            type: object
            properties:
              sig:
                type: string
        cmd:
          type: string
    QuicksignRequest:
      type: object
      properties:
        commandSigDatas:
          type: array
          items:
            $ref: '#/components/schemas/CommandSigData'
    QuicksignResponse:
      type: object
      properties:
        responses:
          type: array
          items:
            $ref: '#/components/schemas/QuicksignResult'
        error:
          $ref: '#/components/schemas/QuicksignError'
    CommandSigData:
      type: object
      properties:
        cmd:
          type: string
        sigs:
          type: array
          items:
            $ref: '#/components/schemas/QuicksignSigner'
      example:
        commandSigDatas:
        - sigs:
            - pubKey: "ae18efd16cbd49e9a92552a2589ac01491b486fbcbb1e3f07980f945597e2033"
            - pubKey: "fa781bdd858cd2380b5e2b654e58035f7189a6e8158686a1bb7eabb585a56e7f"
              sig: null
            - pubKey: "d61c2b4d8151cd0a7599790a6a905a96dc1028b5e61181e08104e60f28ad8997"
              sig: "a41b1c481414b0a0bac27c1f95f03d058cf1dc7ace571cf7b7a74be34e90116096dac8744adc0b94ffc16241cc87f513ea7f999802b3b6e58a1139c56881f800"
          cmd: "{\"networkId\":\"testnet04\",\"payload\":{\"exec\":{\"data\":null,\"code\":\"(enforce-keyset (read-keyset 'ks))\"}},\"signers\":[{\"pubKey\":\"ae18efd16cbd49e9a92552a2589ac01491b486fbcbb1e3f07980f945597e2033\"},{\"pubKey\":\"fa781bdd858cd2380b5e2b654e58035f7189a6e8158686a1bb7eabb585a56e7f\"},{\"pubKey\":\"d61c2b4d8151cd0a7599790a6a905a96dc1028b5e61181e08104e60f28ad8997\"}],\"meta\":{\"creationTime\":1664393516,\"ttl\":1800,\"gasLimit\":100,\"chainId\":\"0\",\"gasPrice\":1.0e-6,\"sender\":\"k:ae18efd16cbd49e9a92552a2589ac01491b486fbcbb1e3f07980f945597e2033\"},\"nonce\":\"2022-09-28 19:31:56.965212 UTC\"}"

    QuicksignSigner:
      type: object
      properties:
        pubKey:
          type: string
        sig:
          type: string
          nullable: true
    QuicksignResult:
      type: object
      properties:
        commandSigData:
          type: object
          properties:
            commandPayload:
              type: string
            signerList:
              type: array
              items:
                type: object
                properties:
                  pubKey:
                    type: string
                  sig:
                    type: string
                    nullable: true
        outcome:
          $ref: '#/components/schemas/QuicksignOutcome'
    QuicksignOutcome:
      type: object
      properties:
        result:
          type: string
        hash:
          type: string
          nullable: true
        msg:
          type: string
          nullable: true
    QuicksignError:
      type: object
      properties:
        type:
          type: string
          enum: ['reject', 'emptyList', 'other']
        msg:
          type: string
          nullable: true

